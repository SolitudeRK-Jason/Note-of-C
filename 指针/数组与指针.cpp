# include <stdio.h>

void f(int* pArr, int len) {
	int i;

	for (i = 0; i < len; ++i)
	{
		printf("%d ", *(pArr + i));
	}
}

int main(void) {
	int a[5] = { 1,2,3,4,5 };//a表示数组的第一个元素a[0]的地址即&a[0]
	int b[6] = { 33,333,3333,33333 };
	int c[100] = { 2,45,68,23,34 };

	f(a, 5);

	int m[5];
	int * p;
	int * q;
	p = &a[1];
	q = &a[4];
	printf("p和q所指向的单元指向%d个单元", q - p);

	return 0;
}
/*
在visio studio中输出结果为
――――――――――――――
1 2 3 4 5 p和q所指向的单元指向3个单元
――――――――――――――
总结:
一.引用数组元素的方法
①数组a[5]中元素用下标表示为：a[0],a[1]......a[5]
②int *p = a;则也可表示为*p,*(p+1)......*(p=5)
二.数组和指针的关系：
①p是指向数组第一个元素的指针，可以用*（p+i）表示数组中第i+1个元素，a也是指向数组第一个元素地址的指针，也可用*（a+i）表示第i+1个元素
②a和p均为指向数组第一个元素的指针，用a[i]表示第i+1个元素，当然也可以用p[i]表示第i+1个元素
即p[i] == *(p+i) == *(a+i) == a[i]
三.指向数组的指针的自增
int a[5];
int *p = a;
可以++p递增指针p指向下一个数组元素，然后用*p取得元素的值
但是不能用a++或者++a把指针指向下一个数组元素，因为数组名是指向数组首元素的指针常量（常量！！！！），不能指向其他地址，只能指向首个数组元素的地址
四.其他
1.确定一个一维数组需要几个参数（如果一个函数要处理一个一维数组）
两个：①数组首个元素的地址；②数组的长度
2.指针变量的运算：
指针变量不能相加，不能相乘，不能相除
若两个指针变量指向的是同一块连续空间的不同存储单元，则这两个指针变量可以相减
*/