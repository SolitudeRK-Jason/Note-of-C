补码：
1.十进制转二进制
    辗转相除法，除2取余至商为0，余数倒序排序即为结果
2.正整数由十进制转二进制
    同上，正整数二进制代码特征为最高位即最左端（符号位）为0
3.负整数由十进制转二进制
    先求负数相反数的二进制代码，然后将所有位取反，末尾（右端+1），
    不够32位即左边补1至32位，负整数二进制代码特征为最高位（符号位）
    为1
4.0的二进制代码为全是0，即32个0
5.已知二进制求十进制
   (1)如果为正整数，则正常运算即可
   (2)如果为负整数，则将所有位取反，末尾+1，所得数即为该负数绝对值
	example：
	(1)01111111，表示正整数，转化为十进制结果为127
	(2)11001110，表示负整数，所有位取反后为00110001，+1
	后为00110010，转化为十进制结果为50，则原二进制对应十
	进制结果为-50
6.八位二进制代码所代表的十进制结果示意图
	00000000——————————0
	00000001——————————1
	........
	01111111——————————127
	10000000——————————-128
	10000001——————————-127
	10000010——————————-126
	........
	11111111——————————-1
	
	也就是说八位二进制代码所代表的十进制结果取值范围为[-128,127]
	如果将128，129...赋给char类型变量再以十进制输出（例如 char ch = 128），
	结果为-128，因为128的二进制代码为
	00000000000000000000000010000000，占四个字节，而ch只占1
	个字节，最后ch中内容二进制为10000000，之前24位0丢失了如前文
	所述输出十进制结果为-128，出现的警告是因为溢出了
	